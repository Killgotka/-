/*1. Даны массивы A и B одинакового размера N. Поменять местами их содержимое 
и вывести вначале элементы преобразованного массива A,
а затем — элементы преобразованного массива B.
*/

#include <stdio.h>
int main(void)
{
    int a[10],b[10];
    int n;
    printf("N: ");
    scanf("%i",&n);
    int i;
    for (i=0; i<n; ++i){
        printf("a[%i] : ",i+1);
        scanf("%i",&a[i]);
    }
    for (i=0; i<n; ++i){
        printf("b[%i] : ",i+1);
        scanf("%i",&b[i]);
    }
    for (i=0; i<n;++i){
        a[i]+=b[i];
        b[i]=a[i]-b[i];
        a[i]=a[i]-b[i];
    }
    printf("A: \n");
    for (i=0; i<n; ++i) printf("  %i: %i\n",i+1,a[i]);
    printf("B: \n");
    for (i=0; i<n; ++i) printf("  %i: %i\n",i+1,b[i]);
    return 0;
}

/*2. Дан массив A размера N. Сформировать новый массив B того же размера по следующему правилу:
элемент BK равен среднему арифметическому элементов массива A с номерами от 1 до K.
*/

#include <stdio.h>
int main(void)
{
    float a[10],b[10];
    int n;
    printf("N: ");
    scanf("%i",&n);
    int k;
    for (k=0; k<n; ++k){
        printf("a[%i] : ",k+1);
        scanf("%f",&a[k]);
    }
    int i;
    for (k=0; k<n; ++k){
        b[k]=0;
        for (i=0; i<=k; ++i){
            b[k]+=a[i];
        }
        b[k]/=k+1;
    }
    printf("B: \n");
    for (k=0; k<n; ++k) printf("  %i: %f\n",k+1,b[k]);
    return 0;
}

/*3. Дан целочисленный массив размера N. Увеличить все нечетные числа, содержащиеся в массиве,
на исходное значение последнего нечетного числа.
Если нечетные числа в массиве отсутствуют, то оставить массив без изменений
*/

#include <stdio.h>
int main(void)
{
    int a[10];
    int n;
    printf("N: ");
    scanf("%i",&n);
    int i;
    for (i=0; i<n; ++i){
        printf("a[%i] : ",i+1);
        scanf("%i",&a[i]);
    }
    int odd=0;
    for (i=n-1; i>=0; --i){
        if (a[i]%2!=0) {
            odd=a[i];
            break;
        }
    }
    for (; i>=0; --i){
        if (a[i]%2!=0){
            a[i]+=odd;
        }
    }
    printf("A: \n");
    for (i=0; i<n; ++i) printf("  %i: %i\n",i+1,a[i]);
    return 0;
}

/*4. Дан массив размера N. Обнулить элементы массива, расположенные между его минимальным и
максимальным элементами (не включая минимальный и максимальный элементы).
*/

#include <stdio.h>
int main(void)
{
    int a[10];
    int n;
    printf("N: ");
    scanf("%i",&n);
    int i;
    for (i=0; i<n; ++i){
        printf("a[%i] : ",i+1);
        scanf("%i",&a[i]);
    }
    int min=0,max=0;
    for (i=n-1; i>=0; --i){
        if (a[i]>a[max]) max=i;
        if (a[i]<a[min]) min=i;
    }
    if (max<min) {
        max+=min;
        min=max-min;
        max=max-min;
    }
    for (i=min+1; i<min+(max-min); ++i) a[i]=0;
    printf("A: \n");
    for (i=0; i<n; ++i) printf("  %i: %i\n",i+1,a[i]);
    return 0;
}

/*5. Дан массив размера N, все элементы которого, кроме первого, упорядочены по возрастанию.
Сделать массив упорядоченным, переместив первый элемент на новую позицию.
*/

#include <stdio.h>
int swap(float *f1, float *f2){
    *f1+=*f2;
    *f2=*f1-*f2;
    *f1=*f1-*f2;
    return 0;
}
 
int main(void)
{
    float a[10];
    int n;
    printf("N: ");
    scanf("%i",&n);
    int i;
    for (i=0; i<n; ++i){
        printf("a[%i] : ",i+1);
        scanf("%f",&a[i]);
    }
    for (i=1; i<n; ++i){
        if (a[i-1]>a[i]) {
            swap(&a[i-1], &a[i]);
        }
        else break;
    }
    printf("A: \n");
    for (i=0; i<n; ++i) printf("  %i: %f\n",i+1,a[i]);
    return 0;
}
