/*1. Даны целые положительные числа A и B (A < B).
Вывести все целые числа от A до B включительно;
при этом каждое число должно выводиться столько раз,
каково его значение (например, число 3 выводится 3 раза).*/

#include <iostream>
using namespace std;
 
int main() {
    setlocale(LC_ALL, "Russian");
    int a, b;
    cout<<"A:";
    cin>>a;
    cout << "B:";
    cin >> b;
    int i, i2;
    for (i = a; i <= b; ++i) {
        for (i2 = 1; i2 <= i; ++i2)
            cout << i <<" ";
    }
    return 0;
}

/*2. Даны положительные числа A и B (A > B). 
На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений).
Не используя операции умножения и деления, найти длину незанятой части отрезка A.*/

#include <iostream>
using namespace std;
 
int main() {
 setlocale(LC_ALL, "Rus");
 int a, b;
 cout<<"A:";
 cin>>a;
 cout<<"B:";
 cin>>b;
 int t = a;
 while (t >= 0) {
 t -= b;
 }
 cout<< t + b;
}

/*3. Дано целое число N (> 1).
Вывести наименьшее из целых чисел K, для которых
сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.*/

# include <iostream>
# include <cmath>
 
using namespace std;
 
int main ()
{
  int N;
  int K= 0;
  int S= 0;
  cout << "Введите целое число N (>1): ";
  cin >> N;
  while(S <= N) {
   ++K;
   S += K;   
  }
  cout << "Наименьшее из целых чисел K, для которых сумма 1 + 2 + ... + K будет больше или равна N:   " << "K= " << K << endl;
  return 0;
}

/*4. Начальный вклад в банке равен 1000 руб. Через каждый месяц размер вклада увеличивается на P процентов
от имеющейся суммы (P — вещественное число, 0 < P < 25). По данному P определить,
через сколько месяцев размер вклада превысит 1100 руб.,
и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число).*/

#include <iostream>
using namespace std;
 
int main() {
    setlocale(LC_ALL, "Russian");
    float p;
    cout << "P:";
    cin >> p;
    int k = 1;
    float s = 1000;
    while (s <= 1100) {
        ++k;
        s += s * p / 100;
    }
    cout<<"k:"<<k<<endl<<"S:"<< s;
    return 0;
}

/*5. Даны целые положительные числа A и B. 
Найти их наибольший общий делитель (НОД), используя алгоритм Евклида*/

#include <iostream>
using namespace std;
 
int main() {
    setlocale(LC_ALL, "Russian");
    int a, b;
    cout << "A:";
    cin >> a;
    cout << "B:";
    cin >> b;
    while ((a != 0) & (b != 0)) {
        if (a > b) {
            a = a % b;
        } else {
           b = b % a; 
        }
    }
    cout<< a + b;
    return 0;
}

/*6. Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK.
Найти целое число K — порядковый номер числа Фибоначчи N.*/

#include <iostream>
using namespace std;
 
int main() {
    setlocale(LC_ALL, "Russian");
    int n;
    cout << "N:";
    cin >> n;
    int f1 = 1, f2 = 1, f = 0, k = 2;
    while (f < n) {
        ++k;
        f = f2 + f1;
        f2 = f1;
        f1 = f;
    }
    cout << "k:" << k;
    return 0;
}
