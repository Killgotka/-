/*1. Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую
ее в переменной B (A — входной, B — выходной параметр; оба параметра являются вещественными).
С помощью этой функции найти третьи степени пяти данных чисел.*/

#include <stdio.h>
void poweraA3(float a, float *b)
{
   *b=a*a*a;
}
int main(void)
{
    int i;
    for(i=1;i<=5;++i){
        float a;
        printf("A:");
        scanf("%f", &a);
        float b;
        poweraA3(a, &b);
        printf("B: %f\n",b);
   }
    return 0;
}

/*2. Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
 −1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.
*/

#include <stdio.h>
 
int sign(float x){
   if (x<0){ return -1;}    if (x==0){ return 0;}    if (x>0){ return 1;}
}
 
int main(void)
{
    float a,b;
    printf("A:");
    scanf("%f", &a);
    printf("B:");
    scanf("%f", &b);
    printf("Sign(A)+Sign(B):%i\n",sign(a)+sign(b));
    return 0;
}

/*3. Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного
между двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2).
С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.
*/

#include <stdio.h>
 
float rings(float r1, float r2){
   return 3.14*(r1*r1-r2*r2);
}
int main(void)
{
    int i;
    for(i=1; i<=3; ++i){
        float r1,r2;
        printf("R1:");
        scanf("%f", &r1);
        printf("R2:");
        scanf("%f", &r2);
        printf("S:%f\n",rings(r1,r2));
    }
    return 0;
}

/*4. Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти,
в которой находится точка с ненулевыми вещественными координатами (x, y). 
С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами
*/

#include <stdio.h>

int quarter(float x, float y){
    if ((x>0)&&(y>0)){return 1;}
    if ((x<0)&&(y>0)){return 2;}
    if ((x<0)&&(y<0)){return 3;}     if ((x>0)&&(y<0)){return 4;}
}
int main(void)
{
    int i;
    for (i=1; i<=3; ++i){
        float x,y;
        printf("X:");
        scanf("%f", &x);
        printf("Y:");
        scanf("%f", &y);
        printf("Quarter:%i\n",quarter(x,y));
     }
    return 0;
}

/*5. Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; 
N!! = 2·4·6·. . .·N, если N — четное 
(N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того,
чтобы избежать целочисленного переполнения при больших значениях N).
*/

#include <stdio.h>
 
float fact2(int n){
    int temp=1;
    for (;n>0;n-=2) temp*=n;
    return temp;
}
 
int main(void)
{
    int n;
    printf("N:");
    scanf("%i", &n);
    printf("fact: %f\n",fact2(n));
    return 0;
}
